#!/bin/bash
#
# This file was created by the wick-infect formula

# ./parent/lib/wick-in-array
#!/bin/bash

wick-in-array() {
    local CHECK NEEDLE

    NEEDLE="$1"
    shift

    for CHECK in "$@"; do
        [[ "$NEEDLE" == "$CHECK" ]] && return 0
    done

    return 1
}

# ./parent/lib/wick-indirect
#!/bin/bash

wick-indirect() {
    unset -v "$1" || wick-error "Invalid identifer: $1"
    printf -v "$1" '%s' "$2"
}

# ./parent/lib/wick-indirect-array
#!/bin/bash

wick-indirect-array() {
    unset -v "$1"
    eval $1=\(\"\${@:2}\"\)
}

# ./parent/lib/wick-parse-arguments
#!/bin/bash

wick-parse-arguments() {
    local ARG LEN UNPARSED UNPARSED_DEST VALUE

    UNPARSED_DEST="$1"
    shift
    UNPARSED=()
    LEN=0

    for ARG in "$@"; do
        case "$ARG" in
            --*)
                VALUE=true
                
                if [[ "$ARG" == *=* ]]; then
                    VALUE=${ARG#*=}
                    ARG=${ARG%%=*}
                fi

                printf -v "ARGS_${ARG:2}" '%s' "$VALUE"
                ;;

            -*)
                ARG="${ARG:1}"
                
                while [[ ! -z "$ARG" ]]; do
                    printf -v "ARGS_${ARG:0:1}" 'true'
                    ARG="${ARG:1}"
                done
                ;;

            *)
                UNPARSED[$LEN]="$ARG"
                LEN=$(($LEN + 1))
                ;;
        esac
    done

    local "$UNPARSED_DEST" && wick-indirect-array "$UNPARSED_DEST" "${UNPARSED[@]}"
}

