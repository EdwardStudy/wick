#!/usr/bin/env bash
# Internal: Add a service and inform the system.
#
# --force - Force a service to be written even if it already exists.
# $1      - Service name.
# $2      - Source file, passed to `wickMakeFile`.
# $@      - Other options, also passed to `wickMakeFile`.
#
# Examples
#
#   wickServiceAdd redis redis.conf.sh --template
#
#   # This won't overwrite an existing service unless you also pass --force
#   wickServiceAdd redis redis.conf2.sh --template --force
#
# Returns nothing.
wickServiceAdd() {
    local force options service source initType

    wickGetArgument service 0 "$@" || return $?
    wickGetArgument source 1 "$@" || return $?
    wickGetOptions options "$@" || return $?
    wickGetOption force force "$@" || return $?
    wickInfo "Adding service: $service" || return $?

    wickExplorer initType wick-base init-system || return $?

    if [[ ! -f "/etc/init.d/$service" ]] || [[ -n "$force" ]]; then
        wickMakeFile --mode=0755 --owner=root:root "$source" "/etc/init.d/$service" "${options[@]-}" || return $?

        if [[ "$initType" == systemd ]]; then
            systemctl daemon-reload || return $?
        elif wickCommandExists chkconfig; then
            chkconfig --add "$service" || return $?
        fi
    else
        wickWarn "Service already exists and --force flag was not specified" || return $?
    fi
}
