#!/usr/bin/env bash
# Public: Install or remove packages on the target system.  This handles the
# OS-specific tools that are used to install or remove the packages.  If the
# package is named differently on various systems, it is up to the formula to
# address that, such as with the apache2 formula.
#
# $1               - Name of package to install.
# --exists         - When set, returns true if the package exists.  Does not
#                    install nor uninstall any package.
# --uninstall      - When set, this will uninstall the package instead.
# $YUM_ENABLE_REPO - Allows additional yum repositories.
#
# Uses the `YUM_ENABLE_REPO` environment variable if you need to enable
# additional yum repositories, such as [Remi's
# Repository](../yum-remi/README.md), which can sometimes be a little
# dangerous.  This is only used with yum-based systems.
#
# Examples
#
#   wickPackage --uninstall apache
#   wickPackage apache2
#
#   # Enable Remi's repository for this one package so we install a
#   # significantly newer version of Redis.
#   YUM_ENABLE_REPO=remi wickPackage redis
#
# Returns true on success for normal execution.  When `--exists` is used, this
# returns true if the specified package exists and is installed on the system.
wickPackage() {
    local exists os state uninstall unparsed

    wickGetOption exists exists "$@"
    wickGetOption uninstall uninstall "$@"
    wickGetArguments unparsed "$@"

    # Intentionally append to state to flag errors
    state=""

    if [[ -n "$exists" ]]; then
        state="exists$state"
    fi

    if [[ -n "$uninstall" ]]; then
        state="uninstall$state"
    fi

    : ${state:=install}

    wickExplorer os wick-base os

    case "$os" in
        centos|redhat)
            wickPackageYum "$state" "${unparsed[@]-}"
            ;;

        ubuntu|debian)
            wickPackageApt "$state" "${unparsed[@]-}"
            ;;

        *)
            wickError "Unable to determine package manager"
            return 1
            ;;
    esac
}
