#!/usr/bin/env bash

wickService() {
    local ACTION FORCE I OPTIONS UNPARSED

    wickGetOption FORCE force "$@"
    wickGetOptions OPTIONS "$@"
    wickGetArgument ACTION 0 "$@"
    wickGetArguments UNPARSED "$@"
    I=1

    if [[ ${#UNPARSED[@]} -lt 1 ]]; then
        wickError "Specify action to take and the service name to act upon."
        return 1
    fi

    if [[ ${#UNPARSED[@]} -lt 2 ]]; then
        wickError "Must specify service name to act upon"
        return 1
    fi

    if [[ ${#OPTIONS[@]} -gt 0 ]]; then
        wick-array-filter OPTIONS wickService-filter-options "${OPTIONS[@]}"
    fi

    # Append unparsed items to the options list.
    # Start at 1 to skip the action passed to wickService.
    while [[ $I -lt ${#UNPARSED[@]} ]]; do
        OPTIONS[${#OPTIONS[@]}]=${UNPARSED[$I]}
        I=$((I + 1))
    done

    case "$ACTION" in
        add)
            wickService-add "${OPTIONS[@]-}"
            ;;

        disable)
            wickService-disable "${OPTIONS[@]-}"
            ;;

        enable)
            wickService-enable "${OPTIONS[@]-}"
            ;;

        make-override)
            wickService-make-override "${OPTIONS[@]-}"
            ;;

        override)
            wickService-override "${OPTIONS[@]-}"
            ;;

        reload)
            wickService-reload "${OPTIONS[@]-}"
            ;;

        restart)
            wickService-restart "${OPTIONS[@]-}"
            ;;

        start)
            wickService-start "${OPTIONS[@]-}"
            ;;

        stop)
            wickService-stop "${OPTIONS[@]-}"
            ;;

        *)
            wickError "Unknown service command: $ACTION"
            wickError "Must be one of: add, disable, enable, make-override, override, reload, restart, start, stop"
            return 1
            ;;
    esac
}


wickService-add() {
    local OPTIONS SERVICE SOURCE

    wickGetArgument SERVICE 0 "$@"
    wickGetArgument SOURCE 1 "$@"
    wickGetOptions OPTIONS "$@"
    wickInfo "Adding service: $SERVICE"

    if [[ ! -f "/etc/init.d/$SERVICE" ]] || [[ ! -z "$FORCE" ]]; then
        wickMakeFile --mode=0755 --owner=root:root "$SOURCE" "/etc/init.d/$SERVICE" "${OPTIONS[@]-}"
        chkconfig --add "$SERVICE"
    else
        wickWarn "Service already exists and --force flag was not specified"
    fi
}

wickService-disable() {
    wickInfo "Disabling service: $1"
    chkconfig "$1" off
}

wickService-enable() {
    wickInfo "Enabling service: $1"
    chkconfig "$1" on
}

wickService-filter-options() {
    case "$1" in
        --force|--force=*)
            return 1
            ;;
    esac

    return 0
}

wickService-make-override() {
    local DEST LABEL LSB SERVICE SRC VALUE

    SERVICE="$1"
    SRC="/etc/init.d/$SERVICE"
    DEST="/etc/chkconfig.d/$SERVICE"

    wickInfo "Making override for service: $SERVICE"

    if [[ -f "$DEST" ]] && [[ -z "${FORCE-}" ]]; then
        wickWarn "Override already exists and --force flag was not specified"
        return 0
    fi

    if [[ ! -f "$SRC" ]]; then
        echo "Source service file does not exist: $SRC" >&2
        return 1
    fi

    LSB=$(sed '0,/^### BEGIN INIT INFO/ d; /^### END INIT INFO/,$ d' "$SRC")
    grep '^# chkconfig:' "$SRC" | head -n 1 > "$DEST"
    echo '### BEGIN INIT INFO' >> "$DEST"

    for LABEL in Provides Default-Start Default-Stop Required-Start Required-Stop Should-Start Should-Stop; do
        VALUE=$(echo "$LSB" | grep '^# '"$LABEL"':' || echo "")
        echo "${VALUE:-# ${LABEL}:}" >> "$DEST"
    done

    echo '### END INIT INFO' >> "$DEST"
    wickService-override "$SERVICE"
}

wickService-override() {
    wickInfo "Updating scripts with override for service: $1"
    chkconfig --override "$1"
}

wickService-reload() {
    wickInfo "Reloading service: $1"
    nohup service "$1" reload
}

wickService-restart() {
    wickInfo "Restarting service: $1"
    nohup service "$1" restart
}

wickService-start() {
    wickInfo "Starting service: $1"
    nohup service "$1" start
}

wickService-stop() {
    wickInfo "Stopping service: $1"
    nohup service "$1" stop
}

