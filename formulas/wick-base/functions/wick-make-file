#!/usr/bin/env bash

wickMakeFile() {
    local DEST DEST_FILE OWNER SET_MODE SET_OWNER SRC SRC_FILE USE_FORMULA USE_TEMPLATE

    wickGetOption USE_FORMULA formula "$@"
    wickGetOption SET_MODE mode "$@"
    wickGetOption SET_OWNER owner "$@"
    wickGetOption USE_TEMPLATE template "$@"
    wickGetArgument SRC_FILE 0 "$@"
    wickGetArgument DEST 1 "$@"
    SRC="$WICK_FORMULA_DIR"

    if [[ ! -z "$USE_FORMULA" ]]; then
        wickFind SRC "formulas/$USE_FORMULA"
    fi

    if [[ -z "$USE_TEMPLATE" ]]; then
        SRC="$SRC/files"
    else
        SRC="$SRC/templates"
    fi

    SRC="$SRC/$SRC_FILE"

    # Make sure the file exists
    if [[ ! -f "$SRC" ]]; then
        wickError "Unable to find source file: $SRC"

        return 1
    fi

    # Write to stdout if there is no destination
    if [[ -z "$DEST" ]] || [[ "$DEST" == "-" ]]; then
        if [[ -z "$USE_TEMPLATE" ]]; then
            wickDebug "Writing file to stdout: $SRC"
            cat "$SRC"
        else
            wickDebug "Writing template to stdout: $SRC"
            formula-template "$SRC"
        fi

        return 0
    fi

    if [[ -z "$USE_TEMPLATE" ]]; then
        wick-get-dest DEST "$DEST" "$SRC_FILE"
    else
        wick-get-dest DEST "$DEST" "${SRC_FILE%.*}"
    fi

    # Ensure the directory exists
    if [[ ! -d "${DEST%/*}" ]]; then
        # Preserve the owner if one was passed
        wick-make-dir "${DEST%/*}" "--owner=$SET_OWNER"
    fi

    if [[ -z "$USE_TEMPLATE" ]]; then
        # Not a template - just copy
        wickDebug "Copying $SRC to $DEST"
        cp "$SRC" "$DEST" || return 1
    else
        # Use a template
        wickDebug "Converting template $SRC into $DEST"
        formula-template "$SRC" > "$DEST" || return 1
    fi

    if [[ ! -z "$SET_OWNER" ]]; then
        wickDebug "Changing ownership: $SET_OWNER"
        chown "$SET_OWNER" "$DEST" || return 1
    fi

    if [[ ! -z "$SET_MODE" ]]; then
        wickDebug "Changing mode: $SET_MODE"
        chmod "$SET_MODE" "$DEST" || return 1
    fi
}
