#!/usr/bin/env bash
# Writes a section to the end of a config file.  Idempotent - will not add
# another section with an identical name.  The opposite function is
# `wickRemoveConfigSection`.
#
# $1 - Config file.
# $2 - Name of the section (very important).
# $3 - Line comment delimeter, defaults to "#"
# --top - Add section to the top (default adds to the bottom).
# stdin - Lines of configuration
#
# This searches the file for a section with the same name and removes it.
# Next it creates a new section with the given name at the end of the file.
#
# Returns 0 on success, 1 on argument validation errors.
wickAddConfigSection() {
    local args top oldContent section
    wickGetOption top --top "$@"
    wickGetArguments args "$@"

    if [[ -z "${args[0]}" ]]; then
        wickError "A file must be specified for wickAddConfigSection"
        return 1
    fi

    if [[ -z "${args[1]}" ]]; then
        wickError "You must specify a name for wickAddConfigSection"
        return 1
    fi

    if [[ -f "${args[0]}" ]]; then
        wickRemoveConfigSection "${args[0]}" "${args[1]}" "${args[2]-}"
    fi

    oldContent=$(cat "${args[0]}")

    section=$(
        echo "${args[2]:-#} BEGIN wickAddConfigSection: ${args[1]}"
        cat
        echo "${args[2]:-#} END wickAddConfigSection: ${args[1]}"
    )

    {
        if [[ -z "$top" ]]; then
            echo "$oldContent"
            echo "$section"
        else
            echo "$section"
            echo "$oldContent"
        fi
    } > "${args[0]}"
}
