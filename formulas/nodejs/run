#!/usr/bin/env bash
# Installs Node.js from their website, not a distribution's packaged version.
#
# --version=VERSION - The specific version (or part of a version) you want to
#                     install. You may specify `4` for latest of the `4` branch
#                     or an exact version number.  This defaults to the latest
#                     version of Node.
#
# Installs node.js to the current machine.  The files are installed into
# `/usr/local/` and symlinks are added to `/usr/`.  Does not use the
# platform's packaged version and instead downloads it from the official
# website.
#
# Examples
#
#    # Installs the latest version
#    wickFormula nodejs
#
#    # Target the most recent version of the 4.x.x branch
#    wickFormula nodejs --version=4
#
#    # Installs Node 5.1.x
#    wickFormula nodejs --version=5.1
#
# Returns nothing.
declare tempDir

wickInfo "Installing Node.js"

wickGetOption VERSION version "$@"

if [[ -n "$VERSION" ]]; then
    wickDebug "Grabbing the most recent $VERSION branch"

    DIR=$(wickGetUrl http://nodejs.org/dist/index.json | jq -r  'sort_by(.date)  | map(select(.version | test("^v'"$VERSION"'\\."))) | last | .version')
else
    wickDebug "Grabbing the most recent branch and version"
    DIR="latest"
fi

wickDebug "Getting latest version number"
nodeBoth=$(wickGetUrl http://nodejs.org/dist/${DIR}/SHASUMS256.txt | grep 'linux-x64.tar.gz')
nodeFile=$(echo "$nodeBoth" | awk '{ print $2 }')

wickTempDir tempDir

wickInfo "Downloading $nodeFile"
wickGetUrl "http://nodejs.org/dist/${DIR}/$nodeFile" "$tempDir/$nodeFile"

wickInfo "Installing Node.js"
cd /usr/local/
tar xzf "$tempDir/$nodeFile" --strip=1 --no-overwrite-dir --owner=root

wickInfo "Creating symlinks for binaries"

for F in bin/node lib/node bin/npm bin/node-waf; do
    rm -f "/usr/$F"

    if [[ -e "/usr/local/$F" ]]; then
        ln -s "/usr/local/$F" "/usr/$F"
    fi
done
