#!/bin/sh -e
### BEGIN INIT INFO
# Provides:          stunnel4
# Required-Start:    $local_fs $remote_fs
# Required-Stop:     $local_fs $remote_fs
# Should-Start:      $syslog
# Should-Stop:       $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start or stop stunnel 4.x (SSL tunnel for network daemons)
# Description:       Starts or stops all configured SSL network tunnels.
### END INIT INFO

# Author / upstream maintainer note:
# With the planned introduction of a control interface (conceptually similar to
# apache2ctl), running separate processes for each *.conf will become obsolete.
# Please add "include = /etc/stunnel/conf.d" to stunnel.conf instead.

. /lib/lsb/init-functions

DEFAULTPIDFILE="/var/run/stunnel.pid"

if [ -f /usr/sbin/stunnel ]; then
    DAEMON=/usr/sbin/stunnel
else
    DAEMON=/usr/bin/stunnel
fi

NAME=stunnel4
DESC="SSL tunnels"
OPTIONS=""
ENABLED=0

# POSIX shell does not officially support "echo -n"
echo_n() {
    printf "%s" "$@"
}

get_opt() {
    sed -e "s;^[[:space:]]*;;" -e "s;[[:space:]]*$;;" \
        -e "s;[[:space:]]*=[[:space:]]*;=;" "$1" |
        grep -i "^$2=" | sed -e "s;^[^=]*=;;"
}

get_pidfile() {
    file=$1

    if [ -f "$file" ]; then
        CHROOT=$(get_opt "$file" chroot)
        PIDFILE=$(get_opt "$file" pid)

        if [ "$PIDFILE" = "" ]; then
            PIDFILE=$DEFAULTPIDFILE
        fi

        echo "$CHROOT/$PIDFILE"
    fi
}

startdaemons() {
    if [ ! -d /var/run/stunnel4 ]; then
        rm -rf /var/run/stunnel4
        install -d -o stunnel4 -g stunnel4 /var/run/stunnel4
    fi

    if [ -n "$RLIMITS" ]; then
        ulimit "$RLIMITS"
    fi

    res=0

    for file in $FILES; do
        if [ -f "$file" ]; then
            echo_n " $file: "
            args="$file $OPTIONS"
            pidfile=$(get_pidfile "$file")

            if egrep -qe '^pid[[:space:]]*=' "$file"; then
                warn=''
            else
                warn=' (no pid=pidfile specified!)'
            fi

            status=0

            # shellcheck disable=SC2086
            start_daemon -p "$pidfile" "$DAEMON" $args || status=$?

            if [ "$status" -eq 0 ]; then
                echo_n "started$warn"
            else
                echo "failed$warn"
                echo "You should check that you have specified the pid= in you configuration file"
                res=1
            fi
        fi
    done

    echo ''

    return "$res"
}

killdaemons() {
    sig=${1:-TERM}
    res=0

    for file in $FILES; do
        echo_n " $file: "
        pidfile=$(get_pidfile "$file")

        if [ ! -e "$pidfile" ]; then
            echo_n "no pid file"
        else
            status=0
            killproc -p "$pidfile" "$DAEMON" "$sig" || status=$?

            if [ "$status" -eq 0 ]; then
                echo_n 'stopped'
            else
                echo_n 'failed'
                res=1
            fi
        fi
    done

    echo ''
    return "$res"
}

querydaemons() {
    res=0

    for file in $FILES; do
        echo_n " $file: "
        pidfile=$(get_pidfile "$file")

        if [ ! -e "$pidfile" ]; then
            echo_n 'no pid file'
            res=1
        else
            status=0
            pidofproc -p "$pidfile" "$DAEMON" >/dev/null || status="$?"

            if [ "$status" = 0 ]; then
                echo_n 'running'
            elif [ "$status" = 4 ]; then
                echo "cannot access the pid file $pidfile"
                res=1
            else
                echo_n 'stopped'
                res=1
            fi
        fi
    done

    echo ''
    exit "$res"
}

if [ "x$OPTIONS" != "x" ]; then
    OPTIONS="-- $OPTIONS"
fi

if [ -f /etc/default/stunnel4 ]; then
    # shellcheck disable=SC1091
    . /etc/default/stunnel4
fi

if [ "$ENABLED" = "0" ] ; then
    echo "$DESC disabled, see /etc/default/stunnel4"
    exit 0
fi

# If the user want to manage a single tunnel, the conf file's name
# is in $2. Otherwise, respect /etc/default/stunnel4 setting.
# If no setting there, use /etc/stunnel/*.conf.
if [ -n "${2:-}" ]; then
    if [ -e "/etc/stunnel/$2.conf" ]; then
        FILES="/etc/stunnel/$2.conf"
    else
        echo >&2 "/etc/stunnel/$2.conf does not exist."
        exit 1
    fi
else
    if [ -z "$FILES" ]; then
        FILES="/etc/stunnel/*.conf"
    fi
fi

[ -x $DAEMON ] || exit 0

set -e
res=0

case "$1" in
    start)
        echo_n "Starting $DESC:"
        startdaemons
        res=$?
        ;;

    stop)
        echo_n "Stopping $DESC:"
        killdaemons
        res=$?
        ;;

    reopen-logs)
        echo_n "Reopening log files $DESC:"
        killdaemons USR1
        res=$?
        ;;

    force-reload|reload)
        echo_n "Reloading configuration $DESC:"
        killdaemons HUP
        res=$?
        ;;

    restart)
        echo_n "Restarting $DESC:"

        if killdaemons; then
            startdaemons
        fi

        res=$?
        ;;

    status)
        echo_n "$DESC status:"
        querydaemons
        res=$?
        ;;

    *)
        N=/etc/init.d/$NAME
        echo "Usage: $N {start|stop|status|reload|reopen-logs|restart} [<stunnel instance>]" >&2
        res=1
        ;;
esac

exit "$res"
