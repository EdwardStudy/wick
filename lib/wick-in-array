#!/usr/bin/env bash
# Public: Check if a value is in an array.  Returns success if it exists,
# failure otherwise.
#
# $1   - The value to seek in the array.
# $2-@ - Array elements.
#
# Examples
#
#   # This example may look complex, but that is because of how newer versions
#   # of Bash ignore the error exit in specific contexts.
#   local list result
#
#   list=(one two three "four four")
#   wickStrictRun result wickInArray one "${list[@]}"
#
#   if [[ "$result" -eq 0 ]]; then
#       # This one works
#       echo "one is found"
#   fi
#
#   wickStrictRun result wickInArray four "${list[@]}"
#
#   if [[ "$result" -eq 0 ]]; then
#       echo "four should not be found"
#       echo "'four four' with a space would be found"
#   fi
#
# Returns success if $1 is found in the list of other arguments.
wickInArray() {
    local check needle

    needle="$1"
    shift

    for check in "$@"; do
        if [[ "$needle" == "$check" ]]; then
            return 0
        fi
    done

    return 1
}
