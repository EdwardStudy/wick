#!/bin/bash

wick-wait-for() {
    local LATCH_PROCESS RESULT SLEEP_PROCESS SLEEP_TIME

    SLEEP_TIME=$1
    shift

    # Run everything in a subshell to automatically enable monitor mode (set +m)
    (
        # The latch
        (
            while ! "$@"; do
                echo "latch fail"
                sleep 1
            done
            echo "latch success"
        ) > /dev/null 2>&1 &
        LATCH_PROCESS=$!

        # The timeout
        (
            sleep $SLEEP_TIME
            kill "$LATCH_PROCESS"
        ) > /dev/null 2>&1 &
        SLEEP_PROCESS=$!

        # Delay until one of the processes finish
        # Avoid "wait -n" because older bash does not support it
        # This also hides a "Terminated" message
        wait $LATCH_PROCESS > /dev/null 2>&1
        RESULT=$?

        # On success, the timeout process is likely still running
        if [[ $RESULT -eq 0 ]]; then
            kill $SLEEP_PROCESS > /dev/null 2>&1
        fi

        # Clean up and hide the "Terminated" message from killing bash
        wait $SLEEP_PROCESS > /dev/null 2>&1

        return $RESULT
    ) || return 1
}
