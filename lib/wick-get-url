#!/usr/bin/env bash
# Public: Download a URL, writing it to stdout or optionally saving it to a
# file.  Uses `curl` or `wget` if installed on the system.
#
# $1                - URL to download.
# $2                - Optional, filename to write with the resulting content.
#                     When not specified, this writes to stdout.
# --progress        - Show progress information during downloads.
# --timeout=SECONDS - Give up after this many seconds elapse.
# --username=USER   - Username to use for request. Adds the --user "USER:PASS" option with curl.
# --password=PASS   - Password to use for request.
#
# Examples
#
#   # Download shell script execute it
#   wickGetUrl --timeout=30 https://get.rvm.io/ | bash
#
#   # Download a large file and show progress information
#   wickGetUrl --progress http://example.com/file.tar.gz /tmp/file.tgz
#
# Returns zero on success, non-zero if there is an error downloading.
wickGetUrl() {
    # Many variables are intended to be used outside of wickGetUrl
    # by the child functions for each command, thus they should be
    # capitalized.  They should not be exported to the outside
    # environment and only should be visible within Bash, so we ignore
    # the linter's warning that they should be exported.
    # shellcheck disable=SC2034
    local DEST PASSWORD PROGRESS result TIMEOUT URL USERNAME

    wickGetOption PROGRESS --progress "$@"
    wickGetOption TIMEOUT --timeout "$@"
    wickGetOption USERNAME --username "$@"
    wickGetOption PASSWORD --password "$@"
    wickGetArgument URL 0 "$@"
    wickGetArgument DEST 1 "$@"
    wickDebug "wickGetUrl url: $URL"
    wickDebug "wickGetUrl dest: $DEST"
    wickStrictRun result wickCommandExists curl

    if [[ "$result" -eq 0 ]]; then
        wickGetUrlCurl || return 1

        return 0
    fi

    wickStrictRun result wickCommandExists wget

    if [[ "$result" -eq 0 ]]; then
        wickGetUrlWget || return 1

        return 0
    fi

    wickError "Unable to download url - no suitable programs found"

    return 1
}
