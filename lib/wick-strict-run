#!/usr/bin/env bash
# Public: Runs a command and captures its return code, even when [strict mode]
# is enabled.  The variable name you specify is set to the return code of the
# command.
#
# $1   - Name of variable that should get the return value / status code.
# $2-@ - Command and arguments to run.
#
# This is intended to be used along with `wickStrictMode`.
#
# Example:
#
#   #!/usr/bin/env bash
#   . /usr/local/lib/wick-infect
#   wickStrictMode
#
#   wickStrictRun result grep "some-string" /etc/some-file.cfg > /dev/null 2>&1
#
#   if [[ $result -eq 0 ]]; then
#       wickInfo "some-string was found"
#   else
#       wickInfo "some-string was not found"
#   fi
#
#   # If the user would like to use strict mode for the
#   # command they are running they can use a subshell
#   # and manually enable wickStrictMode.
#   wickStrictRun result eval "(wickStrictMode; command)"
#
# Returns nothing.
wickStrictRun() {
    local dest result setOptions

    dest=$1
    shift
    setOptions=$-
    set +eE
    # Turning off the error trap for this context.  I don't
    # need the stack trace for the line the command was executed
    # on.
    trap "" ERR
    "$@"
    result=$?
    set -"$setOptions"
    trap 'wickStrictModeFail $?' ERR

    local "$dest" && wickIndirect "$dest" "$result"
}
