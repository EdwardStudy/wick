#!/bin/bash
#
# Enables something as close as possible to a "strict mode" in Bash.
#
# See http://redsymbol.net/articles/unofficial-bash-strict-mode/

wick-strict-mode() {
    set -eEu -o pipefail
    shopt -s extdebug
    IFS=$'\n\t'
    trap 'wick-strict-mode-fail $?' ERR
}

wick-strict-mode-fail() (
    set +x
    local ARGS_LIST ARGS_LEFT I NEXT_ARG

    echo "Error detected - status code $1"
    echo "Command:  $BASH_COMMAND"
    echo "Location:  ${BASH_SOURCE[1]:-unknown}, line ${BASH_LINENO[0]:-unknown}"

    if [[ ${#PIPESTATUS[@]} -gt 1 ]]; then
        echo "Pipe status: " "${PIPESTATUS[@]}"
    fi

    I=$#
    NEXT_ARG=$#

    if [[ $I -lt ${#BASH_LINENO[@]} ]]; then
        echo "Stack Trace:"
    else
        echo "Stack trace is unavailable"
    fi

    while [[ $I -lt ${#BASH_LINENO[@]} ]]; do
        ARGS_LIST=()

        if [[ ${#BASH_ARGC[@]} -gt $I ]] && [[ ${#BASH_ARGV[@]} -ge $(( NEXT_ARG + ${BASH_ARGC[I]} )) ]]; then
            for (( ARGS_LEFT = ${BASH_ARGC[I]}; ARGS_LEFT; --ARGS_LEFT )); do
                # Note: this reverses the order on purpose
                ARGS_LIST[$ARGS_LEFT]=${BASH_ARGV[NEXT_ARG]}
                (( NEXT_ARG ++ ))
            done

            if [[ ${#ARGS_LIST[@]} -gt 0 ]]; then
                printf -v ARGS_LIST " %q" "${ARGS_LIST[@]}"
            else
                ARGS_LIST=""
            fi

            if [[ ${#ARGS_LIST} -gt 255 ]]; then
                ARGS_LIST=${ARGS_LIST:0:250}...
            fi
        else
            ARGS_LIST=""
        fi

        echo "    [$I] ${FUNCNAME[I]:+${FUNCNAME[I]}(): }${BASH_SOURCE[I]}, line ${BASH_LINENO[I - 1]} -> ${FUNCNAME[I]:-${BASH_SOURCE[I]##*/}}$ARGS_LIST"
        (( I ++ ))
    done
)
