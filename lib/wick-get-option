#!/usr/bin/env bash
# Public: Retrieve a named option from the list of arguments.
#
# $1   - Name of variable where the value will be stored.
# $2   - Option's name.  May have leading hyphens (eg. `--option-name` and
#      `option-name` are both valid).
# $3-@ - Arguments to parse.  Typically this is `"$@"`.
#
# This splits up single-hyphen options.  Significantly better examples are explained in [argument processing].
#
# Examples
#
#   # If --verbose=XYZ is passed, $verboseOption will be set to "XYZ".
#   # If --verbose= is passed (empty vallue), $verboseOption is set to "".
#   # If --verbose is passed without a value, $verboseOption is set to "true".
#   # If --verbose is not passed at all, $verboseOption is set to "".
#   wickGetOption verboseOption verbose "$@"
#
#   # Split single-hyphen options:
#   # Assuming that -abc is passed in ...
#   wickGetOption letterC c "$@"
#   wickGetOption letterD d "$@"
#   echo "$letterC" # Echos "true"
#   echo "$letterD" # Echos nothing
#
# Returns nothing.
wickGetOption() {
    local arg name target returnValue value

    target="$1"
    name="$2"
    shift 2

    while [[ "${name:0:1}" == "-" ]]; do
        name="${name:1}"
    done

    returnValue=""
    wickSafeVariableName name "$name"

    while [[ $# -gt 0 ]]; do
        case "$1" in
            --)
                break
                ;;

            --*)
                value=true
                arg=${1:2}

                if [[ "$arg" == *=* ]]; then
                    value=${arg#*=}
                    arg=${arg%%=*}
                fi

                wickSafeVariableName arg "$arg"

                if [[ "$arg" == "$name" ]]; then
                    returnValue="$value"
                fi
                ;;

            -*)
                arg="${1:1}"

                while [[ ! -z "$arg" ]]; do
                    if [[ "${arg:0:1}" == "$name" ]]; then
                        returnValue=true
                    fi

                    arg="${arg:1}"
                done
                ;;
        esac

        shift
    done

    local "$target" && wickIndirect "$target" "$returnValue"
}
