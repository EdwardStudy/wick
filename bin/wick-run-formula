#!/usr/bin/env bash

# Public: This exists so arguments passed to wickRun are not passed to
# formulas.
#
# $1 - Formula command to execute, including arguments.  Already escaped.
#
# *Escaping note:* Formulas that are passed in are already quoted and must not
# be quoted again if you want this to run properly.  See `wickFormula` for
# quoting.
#
# Sets `WICK_FORMULA_DIR` to the directory of the currently executing formula.
# Sets `WICK_FORMULA_NAME` to just the name of the currently executing
# formula.
#
# Returns the status code from the formula.
wickRunFormula() {
    local formula WICK_FORMULA_DIR WICK_FORMULA_NAME

    formula=$1
    shift

    # Only use echo - do not log this to the file because the arguments
    # may contain secret keys.  Logging just the formula's name would be
    # acceptable.
    echo "Executing formula: $formula"

    # See escaping note above
    eval "WICK_FORMULA_DIR=($formula)"
    WICK_FORMULA_DIR=${WICK_FORMULA_DIR[0]%/*}
    WICK_FORMULA_NAME=${WICK_FORMULA_DOR##*/}

    if ! (
        # See escaping note in function header
        # Can't use `. $formula` by itself because parameters get
        # double-escaped.
        #
        #   arg1() { printf "%q" "$1"; }
        #   arg1 a\{b # prints "a\{b"
        #   test="arg1 a\{b"
        #   $test # prints "a\\\{b"
        eval "wickStrictMode ; . $formula"
    ); then
        echo "FAILURE DETECTED"
        # Only use echo - do not log this to the file because the arguments
        # may contain secret keys.  Logging just the formula's name would be
        # acceptable.
        echo "Formula failure: $formula"
        return 1
    fi

    # Only use echo - do not log this to the file because the arguments
    # may contain secret keys.  Logging just the formula's name would be
    # acceptable.
    echo "Formula success: $formula"
}
