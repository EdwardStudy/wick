#!/usr/bin/env bash

# Public: List of formulas to execute.  It is better to log this list
# instead of the one with arguments because arguments may contain
# sensitive information.
WICK_FORMULA_LIST=()

# Public: List of formulas with their arguments.  Try to avoid logging these.
WICK_FORMULA_LIST_WITH_ARGS=()

# Public: Commands to execute in order to make the formula execute.  This
# will only add an entry if there is a "run" script.  The command may have
# arguments appended so try to avoid logging these.
WICK_FORMULA_COMMANDS=()

# Public: Mark a formula as required for a given role or as a dependency
# for other formulas.
#
# $1   - Formula to require
# $2-@ - Arguments for formula's run script
#
# If the formula was already marked as required, this will error as long as
# the arguments don't match and there are arguments for this invocation.
# We can't do this another way because the `depends` file would already
# have been executed with a set of arguments.
#
# Examples
#
#   wickFormula test --arg=1
#   wickFormula test          # Will not error
#   wickFormula test --blue   # Errors
#
# Returns true if formula was found and added to the list.
wickFormula() {
    local args file formula formulaEscaped location preservedPwd result temp

    formula="$1"
    wickArgumentString formulaEscaped "$formula"
    shift

    if [[ $# -gt 0 ]]; then
        wickArgumentString args "$@"
        args=" $args"
    else
        args=""
    fi

    if [[ -z "$formula" ]]; then
        echo "You must specify a formula name." >&2

        return 1
    fi

    wickStrictRun result wickFind location "formulas/$formula"

    if [[ "$result" -ne 0 ]]; then
        echo "Unable to find formula $formula" >&2

        return 1
    fi

    wickStrictRun result wickInArray "$formula" "${WICK_FORMULA_LIST[@]}"

    if [[ "${#WICK_FORMULA_LIST[@]}" -gt 0 ]] && [[ "$result" -eq 0 ]]; then
        # Specifying the same formula is ok as long as the arguments are the same
        wickStrictRun result wickInArray "$formulaEscaped$args" "${WICK_FORMULA_LIST_WITH_ARGS[@]}"

        if [[ "$result" -eq 0 ]]; then
            echo "Formula is already in list: $formula"

            return 0
        fi

        # You can add the formula as a dependency with no arguments when it
        # was already added with arguments
        if [[ "$args" == "" ]]; then
            echo "Formula is already in list and has additional arguments: $formula"
            return 0
        fi

        # Mismatched arguments OR previously did not have arguments and current
        # one has arguments.  Do not continue.
        echo "Formula specified multiple times with different arguments: $formula" >&2
        return 1
    fi

    # Only use echo - do not log this to the file because the arguments
    # may contain secret keys.  Logging just the formula's name would be
    # acceptable.
    echo "Adding formula $formula$args ($location)"
    WICK_FORMULA_LIST[${#WICK_FORMULA_LIST[@]}]=$formula
    WICK_FORMULA_LIST_WITH_ARGS[${#WICK_FORMULA_LIST_WITH_ARGS[@]}]=$formulaEscaped$args

    if [[ -f "$location/depends" ]]; then
        #: Can't run this in a subshell because subshells won't be able to
        #: modify parent variables, like WICK_FORMULA_LIST.
        export WICK_FORMULA_DIR=$location
        preservedPwd=$PWD

        # See escaping note in wickRunFormula for why we are unable to use
        #     . "$location/depends" $args
        eval "wickStrictMode ; . \"$location/depends\" $args"
        cd "$preservedPwd"
    fi

    if [[ -f "$location/run" ]]; then
        wickArgumentString temp "$location/run"
        WICK_FORMULA_COMMANDS[${#WICK_FORMULA_COMMANDS[@]}]=$temp$args
    fi

    if [[ -d "$location/functions" ]]; then
        for file in "$location/functions/"*; do
            if [[ -f "$file" ]]; then
                echo "Loading function: $file"
                . "$file"
            fi
        done
    fi

    if [[ -d "$location/explorers" ]]; then
        for file in "$location/explorers/"*; do
            if [[ -f "$file" ]]; then
                echo "Running explorer: $file"
                (
                    wickExplorer temp "$formula" "${file##*/}"
                )
            fi
        done
    fi
}
