#!/bin/bash
set -e
WICK_DIR="${0%/*}"

CMD="$1"
shift || :

WICK_ON_LOAD_COMMANDS=()

wick-is-valid-script() {
    [[ -f "$1" ]] || return 1
    [[ "${1##*.}" != "md" ]] || return 1
    [[ "$(head -n 1 "$1")" == '#!'* ]] || return 1
    return 0
}

wick-load-lib() {
    local FILE

    if [[ -d "$1/parent" ]]; then
        wick-load-lib "$1/parent"
    fi

    if [[ -d "$1/lib" ]]; then
        for FILE in "$1/lib/"*; do
            if wick-is-valid-script "$FILE"; then
                if [[ ! -z "$DEBUG" ]]; then
                    echo "Loading library: $FILE"
                fi

                . "$FILE"
            fi
        done
    fi
}

wick-on-load() {
    local ARGS
    wick-argument-string ARGS "$@"
    WICK_ON_LOAD_COMMANDS=("${WICK_ON_LOAD_COMMANDS[@]}" "$ARGS")
}

# Load all library functions
wick-load-lib "."

# Load all functions into the current environment
for F in "$WICK_DIR/"wick-*; do
    if [[ -f "$F" ]]; then
        . "$F"
    fi
done

# Run all initialization functions
if [[ ${#WICK_ON_LOAD_COMMANDS[@]} -gt 0 ]]; then
    for LINE in "${WICK_ON_LOAD_COMMANDS[@]}"; do
        eval "$LINE"
    done
fi

if [[ -z "$CMD" ]]; then
    CMD="help"
fi

if ! wick-in-array "$CMD" "${WICK_COMMANDS[@]}"; then
    echo "No such command: $CMD"
    echo "See 'wick help'"
else
    wick-$CMD "$@"
fi
